# ---
# - name: "NPM | Get latest STABLE NodeJS version"
#   ansible.builtin.shell:
#     cmd: curl -sL https://nodejs.org/dist/index.json | jq -r '.[] | select(.lts) | .version' | head -n 1
#   register: nodejs_latest_version
#   changed_when: false
#
# - name: "NPM | Check if NodeJS is installed"
#   ansible.builtin.command: node --version
#   register: nodejs_installed
#   failed_when: false
#   changed_when: false
#
# - name: "NPM | Check if NodeJS is up to date"
#   ansible.builtin.command: node --version
#   register: nodejs_up_to_date
#   failed_when: false
#   changed_when: false
#
# - name: "NPM | Show NodeJS version"
#   ansible.builtin.debug:
#     msg: "Installed NodeJS version: {{ nodejs_installed.stdout }}"
#
# - name: "NPM | Show NodeJS latest version"
#   ansible.builtin.debug:
#     msg: "Online NodeJS LTS version: {{ nodejs_latest_version.stdout }}"
#
# - name: "NPM | Register update needed"
#   ansible.builtin.set_fact:
#     nodejs_install_needed: true
#   when:
#     # - nodejs_installed.rc == 0
#     # - nodejs_up_to_date.rc != 0
#     - nodejs_up_to_date.stdout != nodejs_latest_version.stdout
#
# - name: "NPM | Install NodeJS"
#   become: true
#   when:
#     - nodejs_install_needed is defined
#     - nodejs_install_needed
#   block:
#     - name: "NPM | Get System Arch"
#       ansible.builtin.set_fact:
#         nodejs_arch: "{{ ansible_machine | replace('x86_64', 'x64') | replace('aarch64', 'arm64') }}"
#
#     - name: "NPM | Register Pagkage Name"
#       ansible.builtin.set_fact:
#         nodejs_package_name: "node-{{ nodejs_latest_version.stdout }}-{{ ansible_system | lower }}-{{ nodejs_arch }}"
#
#     - name: "NPM | Download NodeJS"
#       ansible.builtin.get_url:
#         url: "https://nodejs.org/dist/{{ nodejs_latest_version.stdout }}/{{ nodejs_package_name }}.tar.xz"
#         dest: /tmp/{{ nodejs_package_name }}.tar.xz
#         mode: "0644"
#
#     - name: NPM | Ensure Extraction NodeJS directory exists
#       ansible.builtin.file:
#         path: /tmp/{{ nodejs_package_name }}
#         state: directory
#         mode: "0755"
#
#     - name: "NPM | Extract NodeJS"
#       ansible.builtin.unarchive:
#         src: /tmp/{{ nodejs_package_name }}.tar.xz
#         dest: /tmp/{{ nodejs_package_name }}
#         remote_src: true
#         extra_opts: "--strip-components=1"
#
#     - name: "NPM | Copy NodeJS"
#       ansible.builtin.copy:
#         src: /tmp/{{ nodejs_package_name }}/bin/
#         dest: /usr/local/bin/*
#         remote_src: true
#         mode: "0644"
#
#     - name: NPM | Ensure NodeJS Modules directory exists
#       ansible.builtin.file:
#         path: /usr/local/lib/node_modules
#         state: directory
#         mode: "0755"
#
#     - name: "NPM | Copy NodeJS Modules"
#       ansible.builtin.copy:
#         src: /tmp/{{ nodejs_package_name }}/lib/node_modules/
#         dest: /usr/local/lib/node_modules/*
#         remote_src: true
#         mode: "0644"
- name: "NPM - Install nodejs"
  gather_facts: yes
  become: yes
  vars:
    NODEJS_VERSION: "20"
  block:
    - name: Install the gpg key for nodejs LTS
      apt_key:
        url: "https://deb.nodesource.com/gpgkey/nodesource.gpg.key"
        state: present
    
    - name: Install the nodejs LTS repos
      apt_repository:
        repo: "deb https://deb.nodesource.com/node_{{ NODEJS_VERSION }}.x {{ ansible_distribution_release }} main"
        state: present
        update_cache: yes

    - name: Install the nodejs
      apt:
        name: nodejs
        state: present

